{"ast":null,"code":"var _jsxFileName = \"/Users/ryanoh/Desktop/grindgauge/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getTasks, createTask, updateTask, deleteTask } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  useEffect(() => {\n    refresh();\n  }, []);\n  async function refresh() {\n    const t = await getTasks();\n    setTasks(t);\n  }\n  async function handleCreate() {\n    await createTask({\n      title,\n      type: \"OTHER\",\n      status: \"TODO\",\n      dueDate: null\n    });\n    setTitle(\"\");\n    refresh();\n  }\n  async function handleDelete(id) {\n    await deleteTask(id);\n    refresh();\n  }\n  async function toggleDone(task) {\n    const updated = {\n      ...task,\n      status: task.status === \"DONE\" ? \"TODO\" : \"DONE\"\n    };\n    await updateTask(task.id, updated);\n    refresh();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GrindGauge \\u2014 Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"New task title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreate,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: t.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), \" \\u2014 \", t.type, \" \\u2014 \", t.status, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleDone(t),\n          style: {\n            marginLeft: 8\n          },\n          children: \"toggle done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(t.id),\n          style: {\n            marginLeft: 8\n          },\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, t.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dXyN3EuNMp3Kg+AkpIlvmwUJoPY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","getTasks","createTask","updateTask","deleteTask","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","title","setTitle","refresh","t","handleCreate","type","status","dueDate","handleDelete","id","toggleDone","task","updated","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","map","marginLeft","_c","$RefreshReg$"],"sources":["/Users/ryanoh/Desktop/grindgauge/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getTasks, createTask, updateTask, deleteTask } from \"./services/api\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n\n  useEffect(() => {\n    refresh();\n  }, []);\n\n  async function refresh() {\n    const t = await getTasks();\n    setTasks(t);\n  }\n\n  async function handleCreate() {\n    await createTask({ title, type: \"OTHER\", status: \"TODO\", dueDate: null });\n    setTitle(\"\");\n    refresh();\n  }\n\n  async function handleDelete(id) {\n    await deleteTask(id);\n    refresh();\n  }\n\n  async function toggleDone(task) {\n    const updated = {\n      ...task,\n      status: task.status === \"DONE\" ? \"TODO\" : \"DONE\",\n    };\n    await updateTask(task.id, updated);\n    refresh();\n  }\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>GrindGauge — Tasks</h1>\n\n      <div>\n        <input\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          placeholder=\"New task title\"\n        />\n        <button onClick={handleCreate}>Create</button>\n      </div>\n\n      <ul>\n        {tasks.map((t) => (\n          <li key={t.id}>\n            <strong>{t.title}</strong> — {t.type} — {t.status}\n            <button onClick={() => toggleDone(t)} style={{ marginLeft: 8 }}>\n              toggle done\n            </button>\n            <button\n              onClick={() => handleDelete(t.id)}\n              style={{ marginLeft: 8 }}\n            >\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}